
==========
[0/162] examples/LIA/qm_loop_3.sl:
cvc5 interrupted by SIGTERM.

==========
[1/162] examples/LIA/inv_gen_array.sl:
(
(define-fun inv ((m Int) (j Int) (a0 Int)) Bool (or (<= (+ (* 0 m) (* 1 j)) 0) (<= (+ (* 1 m) (* (- 1) a0)) 0)))
)

==========
[2/162] examples/LIA/unbdd_inv_gen_sum1.sl:
cvc5 interrupted by SIGTERM.

==========
[3/162] examples/LIA/t9.sl:
(
(define-fun f_147-8-147-37 ((yearInt Int)) Bool (<= yearInt yearInt))
)

==========
[4/162] examples/LIA/MPwoL_d5s7.sl:
cvc5 interrupted by SIGTERM.

==========
[5/162] examples/LIA/qm_neg_eq_3.sl:
cvc5 interrupted by SIGTERM.

==========
[6/162] examples/LIA/unbdd_inv_gen_finf1.sl:
(
(define-fun inv ((i Int) (x Int) (y Int) (n Int)) Bool (let ((_let_1 (* 0 i))) (and (<= (+ _let_1 _let_1) 0) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[7/162] examples/LIA/mpg_plane1.sl:
(
(define-fun eq1 ((x Int) (y Int) (z Int)) Int (+ y x))
)

==========
[8/162] examples/LIA/inv_gen_winf1.sl:
(
(define-fun inv ((x Int)) Bool (let ((_let_1 (* 0 x))) (or (<= (+ _let_1 _let_1) (- 3)) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[9/162] examples/LIA/qm_loop_1.sl:
(
(define-fun qm-loop ((x Int)) Int (ite (< 0 x) (- x 1) 3))
)

==========
[10/162] examples/LIA/qm_neg_1.sl:
(
(define-fun qm-foo ((x Int)) Int (ite (< x 0) 1 0))
)

==========
[11/162] examples/LIA/t10.sl:
(
(define-fun f_35-7-35-46 ((this.total Int) (this.num Int) (this.start Int)) Bool (> this.total this.total))
)

==========
[12/162] examples/LIA/inv_gen_tcs.sl:
infeasible

==========
[13/162] examples/LIA/inv_gen_cegar2.sl:
infeasible

==========
[14/162] examples/LIA/inv_gen_fig3.sl:
(
(define-fun inv ((x Int) (y Int) (l Int)) Bool (let ((_let_1 (- 1))) (or (= (+ (* 0 x) (* 1 l)) 1) (<= (+ (* 1 x) (* _let_1 y)) _let_1))))
)

==========
[15/162] examples/LIA/mpg_example5.sl:
cvc5 interrupted by SIGTERM.

==========
[16/162] examples/LIA/inv_gen_vmail.sl:
(
(define-fun inv ((i Int) (j Int)) Bool (let ((_let_1 (* 0 i))) (or (<= (+ _let_1 _let_1) (- 3)) (<= (+ _let_1 (* (- 1) i)) 0))))
)

==========
[17/162] examples/LIA/MPwoL_d4s3.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int (ite (<= (get-y currPoint) (get-x currPoint)) 1 2))
)

==========
[18/162] examples/LIA/qm_neg_eq_2.sl:
(
(define-fun qm-foo ((x Int) (y Int)) Int (ite (< x (ite (< 0 y) x 1)) 1 0))
)

==========
[19/162] examples/LIA/inv_gen_w1.sl:
(
(define-fun inv ((x Int) (n Int)) Bool (let ((_let_1 (* 0 x))) (or (<= (+ _let_1 _let_1) (- 3)) (<= (+ (* 1 x) (* (- 1) n)) 0))))
)

==========
[20/162] examples/LIA/t14.sl:
(
(define-fun f_31-12-31-30 ((newLength Int) (offset Int)) Bool (>= newLength newLength))
)

==========
[21/162] examples/LIA/array_search_13.sl:
cvc5 interrupted by SIGTERM.

==========
[22/162] examples/LIA/array_search_4.sl:
cvc5 interrupted by SIGTERM.

==========
[23/162] examples/LIA/s2.sl:
(
(define-fun f ((x Int) (y Int)) Int (- 1))
)

==========
[24/162] examples/LIA/inv_gen_n_c11.sl:
(
(define-fun inv ((i Int) (l Int)) Bool (let ((_let_1 (* 0 i))) (and (<= (+ _let_1 (* 1 l)) 4) (<= (+ _let_1 (* (- 1) l)) 0))))
)

==========
[25/162] examples/LIA/qm_max5.sl:
cvc5 interrupted by SIGTERM.

==========
[26/162] examples/LIA/mpg_example1.sl:
cvc5 interrupted by SIGTERM.

==========
[27/162] examples/LIA/MPwL_d4s7.sl:
cvc5 interrupted by SIGTERM.

==========
[28/162] examples/LIA/unbdd_inv_gen_ex23.sl:
cvc5 interrupted by SIGTERM.

==========
[29/162] examples/LIA/unbdd_inv_gen_trex1.sl:
(
(define-fun inv ((x Int) (y Int) (k Int) (z Int) (c Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (<= (+ _let_1 (* (- 1) z)) (- 0 1)))))
)

==========
[30/162] examples/LIA/unbdd_inv_gen_w1.sl:
(
(define-fun inv ((x Int) (n Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (<= (+ (* 1 x) (* (- 1) n)) 0))))
)

==========
[31/162] examples/LIA/max7.sl:
cvc5 interrupted by SIGTERM.

==========
[32/162] examples/LIA/unbdd_inv_gen_ex7.sl:
(
(define-fun inv ((i Int) (y Int) (l Int)) Bool (let ((_let_1 (- 1))) (and (<= (+ (* 0 i) (* _let_1 i)) 0) (<= (+ (* 1 y) (* _let_1 l)) 0))))
)

==========
[33/162] examples/LIA/t12.sl:
(
(define-fun f_29-21-29-36 ((pair.length Int)) Bool (>= pair.length pair.length))
)

==========
[34/162] examples/LIA/max13.sl:
cvc5 interrupted by SIGTERM.

==========
[35/162] examples/LIA/inv_gen_ex14.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (- 1))) (let ((_let_2 (* 0 x))) (or (<= (+ _let_2 _let_2) (- 3)) (<= (+ _let_2 (* _let_1 x)) _let_1)))))
)

==========
[36/162] examples/LIA/max10.sl:
cvc5 interrupted by SIGTERM.

==========
[37/162] examples/LIA/max9.sl:
cvc5 interrupted by SIGTERM.

==========
[38/162] examples/LIA/max6.sl:
cvc5 interrupted by SIGTERM.

==========
[39/162] examples/LIA/qm_neg_eq_1.sl:
(
(define-fun qm-foo ((x Int)) Int (ite (< 0 x) 0 1))
)

==========
[40/162] examples/LIA/unbdd_inv_gen_winf1.sl:
(
(define-fun inv ((x Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[41/162] examples/LIA/mpg_ite1.sl:
cvc5 interrupted by SIGTERM.

==========
[42/162] examples/LIA/max_11.sl:
cvc5 interrupted by SIGTERM.

==========
[43/162] examples/LIA/LinExpr_inv1_ex.sl:
cvc5 interrupted by SIGTERM.

==========
[44/162] examples/LIA/mpg_ite2.sl:
cvc5 interrupted by SIGTERM.

==========
[45/162] examples/LIA/t18.sl:
(
(define-fun f_338-17-338-60 ((entry Int) (MC_505948 Int) (i Int) (MC_741360 Int)) Bool (> entry 0))
)

==========
[46/162] examples/LIA/qm_max2.sl:
(
(define-fun qm-foo ((x Int) (y Int)) Int (ite (< x y) y x))
)

==========
[47/162] examples/LIA/t20.sl:
(
(define-fun f_68-13-68-36 ((next Int) (pos Int) (MC_741360 Bool)) Bool (let ((_let_1 (= next 55))) (or (or _let_1 (and MC_741360 (= pos 56))) (or (= next pos) (not _let_1)))))
)

==========
[48/162] examples/LIA/LinExpr_eq1ex.sl:
cvc5 interrupted by SIGTERM.

==========
[49/162] examples/LIA/MPwL_d5s7.sl:
cvc5 interrupted by SIGTERM.

==========
[50/162] examples/LIA/MPwL_d1s7.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int 1)
)

==========
[51/162] examples/LIA/array_search_5.sl:
cvc5 interrupted by SIGTERM.

==========
[52/162] examples/LIA/s0.sl:
cvc5 interrupted by SIGTERM.

==========
[53/162] examples/LIA/inv_gen_ex7.sl:
(
(define-fun inv ((i Int) (y Int) (l Int)) Bool (let ((_let_1 (- 1))) (and (<= (+ (* 0 i) (* _let_1 i)) 0) (<= (+ (* 1 y) (* _let_1 l)) 0))))
)

==========
[54/162] examples/LIA/array_search_2.sl:
(
(define-fun findIdx ((y1 Int) (y2 Int) (k1 Int)) Int (ite (<= y2 k1) 2 (ite (< y1 k1) 1 0)))
)

==========
[55/162] examples/LIA/mpg_example3.sl:
cvc5 interrupted by SIGTERM.

==========
[56/162] examples/LIA/inv_gen_sum4.sl:
(
(define-fun inv ((s Int) (i Int)) Bool (let ((_let_1 (- 1))) (let ((_let_2 (* 1 s))) (and (<= (+ (* 0 s) _let_2) 8) (= (+ _let_2 (* _let_1 i)) _let_1)))))
)

==========
[57/162] examples/LIA/s3.sl:
(
(define-fun f ((x Int) (y Int)) Int (- 1))
)

==========
[58/162] examples/LIA/LinExpr_inv1.sl:
cvc5 interrupted by SIGTERM.

==========
[59/162] examples/LIA/mpg_example4.sl:
cvc5 interrupted by SIGTERM.

==========
[60/162] examples/LIA/inv_gen_term3.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (+ _let_1 _let_1))) (or (<= _let_2 (- 3)) (<= _let_2 0)))))
)

==========
[61/162] examples/LIA/mpg_guard1.sl:
cvc5 interrupted by SIGTERM.

==========
[62/162] examples/LIA/max2.sl:
examples/LIA/max2.sl:3.2: No set-logic command was given before this point.
examples/LIA/max2.sl:3.2: cvc5 will make all theories available.
examples/LIA/max2.sl:3.2: Consider setting a stricter logic for (likely) better performance.
examples/LIA/max2.sl:3.2: To suppress this warning in the future use (set-logic ALL).
(
(define-fun max2 ((x Int) (y Int)) Int (ite (<= y x) x y))
)

==========
[63/162] examples/LIA/max15.sl:
cvc5 interrupted by SIGTERM.

==========
[64/162] examples/LIA/mpg_guard3.sl:
cvc5 interrupted by SIGTERM.

==========
[65/162] examples/LIA/inv_gen_w2.sl:
(
(define-fun inv ((x Int) (n Int)) Bool (let ((_let_1 (- 1))) (let ((_let_2 (* 0 x))) (or (<= (+ _let_2 _let_2) (- 3)) (<= (+ (* 1 x) (* _let_1 n)) _let_1)))))
)

==========
[66/162] examples/LIA/t17.sl:
(
(define-fun f_255-8-255-24 ((j Int) (MC_741360 Int)) Bool (= j j))
)

==========
[67/162] examples/LIA/t2.sl:
(
(define-fun f_290-29-290-44 ((data.length Int)) Bool (> data.length 0))
)

==========
[68/162] examples/LIA/array_search_12.sl:
cvc5 interrupted by SIGTERM.

==========
[69/162] examples/LIA/unbdd_inv_gen_term2.sl:
(
(define-fun inv ((x Int) (y Int) (z Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (<= (+ _let_1 _let_1) 0))) (and _let_2 _let_2))))
)

==========
[70/162] examples/LIA/unbdd_inv_gen_winf2.sl:
(
(define-fun inv ((x Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[71/162] examples/LIA/mpg_guard2.sl:
cvc5 interrupted by SIGTERM.

==========
[72/162] examples/LIA/inv_gen_ex23.sl:
cvc5 interrupted by SIGTERM.

==========
[73/162] examples/LIA/inv_gen_trex1.sl:
(
(define-fun inv ((x Int) (y Int) (k Int) (z Int) (c Int)) Bool (let ((_let_1 (- 1))) (let ((_let_2 (* 0 x))) (or (<= (+ _let_2 _let_2) (- 3)) (<= (+ _let_2 (* _let_1 z)) _let_1)))))
)

==========
[74/162] examples/LIA/qm_choose_yz.sl:
(
(define-fun qm-choose ((x Int) (y Int) (z Int)) Int (ite (< x 1) y z))
)

==========
[75/162] examples/LIA/s1.sl:
cvc5 interrupted by SIGTERM.

==========
[76/162] examples/LIA/max8.sl:
cvc5 interrupted by SIGTERM.

==========
[77/162] examples/LIA/unbdd_inv_gen_cgr1.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (<= (+ (* 1 x) (* (- 1) y)) (+ 1 1)))))
)

==========
[78/162] examples/LIA/unbdd_inv_gen_fig3.sl:
(
(define-fun inv ((x Int) (y Int) (l Int)) Bool (or (= (+ (* 0 x) (* 1 l)) 1) (= (+ (* 1 y) (* (- 1) x)) 1)))
)

==========
[79/162] examples/LIA/qm_max3.sl:
cvc5 interrupted by SIGTERM.

==========
[80/162] examples/LIA/MPwL_d1s3.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int 1)
)

==========
[81/162] examples/LIA/qm_in_range.sl:
(
(define-fun qm-choose ((x Int) (y Int) (z Int)) Int (ite (< y x) (ite (< x z) 1 0) 0))
)

==========
[82/162] examples/LIA/unbdd_inv_gen_sum3.sl:
(
(define-fun inv ((s Int) (l Int) (n Int) (x Int)) Bool (let ((_let_1 (* 0 s))) (and (<= (+ _let_1 _let_1) 0) (= (+ (* 1 s) (* (- 1) x)) 0))))
)

==========
[83/162] examples/LIA/inv_gen_fig1.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (or (<= (+ _let_1 (* 1 x)) (- 3)) (<= (+ _let_1 (* (- 1) y)) (- 2)))))
)

==========
[84/162] examples/LIA/unbdd_inv_gen_w2.sl:
(
(define-fun inv ((x Int) (n Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (<= (+ (* 1 x) (* (- 1) n)) (- 0 1)))))
)

==========
[85/162] examples/LIA/unbdd_inv_gen_trex2.sl:
(
(define-fun inv ((x Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (<= (+ _let_1 _let_1) 0))) (and _let_2 _let_2))))
)

==========
[86/162] examples/LIA/max3.sl:
cvc5 interrupted by SIGTERM.

==========
[87/162] examples/LIA/inv_gen_cgr1.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (or (<= (+ _let_1 _let_1) (- 3)) (<= (+ (* 1 x) (* (- 1) y)) 2))))
)

==========
[88/162] examples/LIA/inv_gen_finf1.sl:
(
(define-fun inv ((i Int) (x Int) (y Int) (n Int)) Bool (let ((_let_1 (* 0 i))) (or (<= (+ _let_1 _let_1) (- 3)) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[89/162] examples/LIA/inv_gen_finf2.sl:
(
(define-fun inv ((i Int) (x Int) (y Int) (n Int)) Bool (let ((_let_1 (* 0 i))) (or (<= (+ _let_1 _let_1) (- 3)) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[90/162] examples/LIA/array_search_15.sl:
cvc5 interrupted by SIGTERM.

==========
[91/162] examples/LIA/unbdd_inv_gen_cegar2.sl:
cvc5 interrupted by SIGTERM.

==========
[92/162] examples/LIA/inv_gen_fig6.sl:
(
(define-fun inv ((y Int)) Bool (let ((_let_1 (* 0 y))) (let ((_let_2 (+ _let_1 _let_1))) (or (<= _let_2 (- 3)) (<= _let_2 0)))))
)

==========
[93/162] examples/LIA/MPwL_d4s3.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int (ite (<= (get-y currPoint) (get-x currPoint)) 1 2))
)

==========
[94/162] examples/LIA/unbdd_inv_gen_vmail.sl:
(
(define-fun inv ((i Int) (j Int)) Bool (let ((_let_1 (* 0 i))) (and (<= (+ _let_1 _let_1) 0) (<= (+ _let_1 (* (- 1) i)) 0))))
)

==========
[95/162] examples/LIA/t15.sl:
(
(define-fun f_97-10-97-48 ((NOACK Int) (this.acknowledgeId Int) (enabled Bool)) Bool enabled)
)

==========
[96/162] examples/LIA/max4.sl:
cvc5 interrupted by SIGTERM.

==========
[97/162] examples/LIA/t8.sl:
(
(define-fun f_143-17-143-55 ((x2 Int) (x1 Int) (parentNode Int) (EMPTY_PARENT Int)) Bool (= x1 x1))
)

==========
[98/162] examples/LIA/s0_d1.sl:
cvc5 interrupted by SIGTERM.

==========
[99/162] examples/LIA/mpg_example2.sl:
cvc5 interrupted by SIGTERM.

==========
[100/162] examples/LIA/unbdd_inv_gen_array.sl:
(
(define-fun inv ((m Int) (j Int) (a0 Int)) Bool (or (<= (+ (* 0 m) (* 1 j)) 0) (<= (+ (* 1 m) (* (- 1) a0)) 0)))
)

==========
[101/162] examples/LIA/unbdd_inv_gen_fig9.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (and (= (+ _let_1 (* 1 x)) 0) (= (+ _let_1 (* 1 y)) 0))))
)

==========
[102/162] examples/LIA/LinExpr_eq2ex.sl:
cvc5 interrupted by SIGTERM.

==========
[103/162] examples/LIA/qm_neg_eq_5.sl:
cvc5 interrupted by SIGTERM.

==========
[104/162] examples/LIA/max14.sl:
cvc5 interrupted by SIGTERM.

==========
[105/162] examples/LIA/MPwL_d5s3.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int (let ((_let_1 (get-y currPoint))) (ite (<= 1 _let_1) 0 (ite (= (get-x currPoint) _let_1) 2 1))))
)

==========
[106/162] examples/LIA/commutative.sl:
(
(define-fun comm ((x Int) (y Int)) Int (- x x))
)

==========
[107/162] examples/LIA/array_search_3.sl:
(
(define-fun findIdx ((y1 Int) (y2 Int) (y3 Int) (k1 Int)) Int (ite (<= k1 y2) (ite (<= y1 k1) 1 0) (ite (<= y3 k1) 3 2)))
)

==========
[108/162] examples/LIA/qm_neg_3.sl:
cvc5 interrupted by SIGTERM.

==========
[109/162] examples/LIA/qm_neg_4.sl:
cvc5 interrupted by SIGTERM.

==========
[110/162] examples/LIA/MPwoL_d1s3.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int 1)
)

==========
[111/162] examples/LIA/MPwoL_d5s3.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int (let ((_let_1 (get-y currPoint))) (ite (<= 1 _let_1) 0 (ite (= (get-x currPoint) _let_1) 2 1))))
)

==========
[112/162] examples/LIA/unbdd_inv_gen_fig6.sl:
(
(define-fun inv ((y Int)) Bool (let ((_let_1 (* 0 y))) (let ((_let_2 (<= (+ _let_1 _let_1) 0))) (and _let_2 _let_2))))
)

==========
[113/162] examples/LIA/inv_gen_sum1.sl:
infeasible

==========
[114/162] examples/LIA/t3.sl:
cvc5 interrupted by SIGTERM.

==========
[115/162] examples/LIA/qm_choose_01.sl:
(
(define-fun qm-choose ((x Int)) Int (ite (< 0 x) 0 1))
)

==========
[116/162] examples/LIA/constant.sl:
(
(define-fun constant ((x Int)) Int 0)
)

==========
[117/162] examples/LIA/mpg_guard4.sl:
cvc5 interrupted by SIGTERM.

==========
[118/162] examples/LIA/unbdd_inv_gen_finf2.sl:
(
(define-fun inv ((i Int) (x Int) (y Int) (n Int)) Bool (let ((_let_1 (* 0 i))) (and (<= (+ _let_1 _let_1) 0) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[119/162] examples/LIA/t6.sl:
(
(define-fun f_30-42-30-64 ((i Int) (MC_741360 Int)) Bool (<= i MC_741360))
)

==========
[120/162] examples/LIA/inv_gen_trex4.sl:
(
(define-fun inv ((x Int) (d Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (+ _let_1 _let_1))) (or (<= _let_2 (- 3)) (<= _let_2 0)))))
)

==========
[121/162] examples/LIA/array_search_9.sl:
cvc5 interrupted by SIGTERM.

==========
[122/162] examples/LIA/array_search_8.sl:
cvc5 interrupted by SIGTERM.

==========
[123/162] examples/LIA/qm_neg_eq_4.sl:
cvc5 interrupted by SIGTERM.

==========
[124/162] examples/LIA/inv_gen_sum3.sl:
(
(define-fun inv ((s Int) (l Int) (n Int) (x Int)) Bool (let ((_let_1 (* 0 s))) (or (<= (+ _let_1 _let_1) (- 3)) (= (+ (* 1 s) (* (- 1) x)) 0))))
)

==========
[125/162] examples/LIA/qm_area_sel_2.sl:
cvc5 interrupted by SIGTERM.

==========
[126/162] examples/LIA/array_search_6.sl:
cvc5 interrupted by SIGTERM.

==========
[127/162] examples/LIA/array_search_7.sl:
cvc5 interrupted by SIGTERM.

==========
[128/162] examples/LIA/inv_gen_term2.sl:
(
(define-fun inv ((x Int) (y Int) (z Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (+ _let_1 _let_1))) (or (<= _let_2 (- 3)) (<= _let_2 0)))))
)

==========
[129/162] examples/LIA/t7.sl:
(
(define-fun f_125-10-125-47 ((bufferIndex Int) (MC_741360 Int)) Bool (> bufferIndex bufferIndex))
)

==========
[130/162] examples/LIA/MPwoL_d1s7.sl:
(
(define-fun move ((currPoint Int) (o0 Int) (o1 Int)) Int 1)
)

==========
[131/162] examples/LIA/array_search_11.sl:
cvc5 interrupted by SIGTERM.

==========
[132/162] examples/LIA/inv_gen_fig9.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (and (= (+ _let_1 (* 1 x)) 0) (= (+ _let_1 (* 1 y)) 0))))
)

==========
[133/162] examples/LIA/array_search_10.sl:
cvc5 interrupted by SIGTERM.

==========
[134/162] examples/LIA/t4.sl:
(
(define-fun f_141-11-141-28 ((x.end Int) (size Int) (i Int) (elem.end Int)) Bool (> x.end elem.end))
)

==========
[135/162] examples/LIA/mpg_plane2.sl:
cvc5 interrupted by SIGTERM.

==========
[136/162] examples/LIA/qm_neg_5.sl:
cvc5 interrupted by SIGTERM.

==========
[137/162] examples/LIA/s0_d2.sl:
cvc5 interrupted by SIGTERM.

==========
[138/162] examples/LIA/unbdd_inv_gen_tcs.sl:
cvc5 interrupted by SIGTERM.

==========
[139/162] examples/LIA/t5.sl:
(
(define-fun f_97-11-98-60 ((charno Int) (MC_505948 Int) (MC_741360 Bool)) Bool MC_741360)
)

==========
[140/162] examples/LIA/t11.sl:
(
(define-fun f_1981-20-1981-42 ((NCK_NEQ_741360 Bool) (NCK_NEQ_505948 Bool)) Bool (not NCK_NEQ_741360))
)

==========
[141/162] examples/LIA/unbdd_inv_gen_ex14.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (and (<= (+ _let_1 _let_1) 0) (<= (+ _let_1 (* (- 1) x)) (- 0 1)))))
)

==========
[142/162] examples/LIA/unbdd_inv_gen_n_c11.sl:
(
(define-fun inv ((i Int) (l Int)) Bool (let ((_let_1 (* 0 i))) (and (<= (+ _let_1 (* 1 l)) 4) (<= (+ _let_1 (* (- 1) l)) 0))))
)

==========
[143/162] examples/LIA/unbdd_inv_gen_trex4.sl:
(
(define-fun inv ((x Int) (d Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (<= (+ _let_1 _let_1) 0))) (and _let_2 _let_2))))
)

==========
[144/162] examples/LIA/mpg_plane3.sl:
cvc5 interrupted by SIGTERM.

==========
[145/162] examples/LIA/qm_loop_2.sl:
cvc5 interrupted by SIGTERM.

==========
[146/162] examples/LIA/unbdd_inv_gen_sum4.sl:
(
(define-fun inv ((s Int) (i Int)) Bool (and (<= (+ (* 0 s) (* 1 s)) 8) (= (+ (* 1 i) (* (- 1) s)) 1)))
)

==========
[147/162] examples/LIA/qm_max4.sl:
cvc5 interrupted by SIGTERM.

==========
[148/162] examples/LIA/array_search_14.sl:
cvc5 interrupted by SIGTERM.

==========
[149/162] examples/LIA/s0_d0.sl:
cvc5 interrupted by SIGTERM.

==========
[150/162] examples/LIA/max12.sl:
cvc5 interrupted by SIGTERM.

==========
[151/162] examples/LIA/inv_gen_fig8.sl:
(
(define-fun inv ((l Int)) Bool (let ((_let_1 (* 0 l))) (or (<= (+ _let_1 _let_1) (- 3)) (= (+ _let_1 (* 1 l)) 0))))
)

==========
[152/162] examples/LIA/unbdd_inv_gen_fig8.sl:
(
(define-fun inv ((l Int)) Bool (let ((_let_1 (* 0 l))) (and (<= (+ _let_1 _let_1) 0) (= (+ _let_1 (* 1 l)) 0))))
)

==========
[153/162] examples/LIA/unbdd_inv_gen_fig1.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (- 0 1))) (let ((_let_2 (* 0 x))) (or (<= (+ _let_2 (* 1 x)) _let_1) (<= (+ _let_2 (* (- 1) y)) _let_1)))))
)

==========
[154/162] examples/LIA/unbdd_inv_gen_term3.sl:
(
(define-fun inv ((x Int) (y Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (<= (+ _let_1 _let_1) 0))) (and _let_2 _let_2))))
)

==========
[155/162] examples/LIA/MPwoL_d4s7.sl:
cvc5 interrupted by SIGTERM.

==========
[156/162] examples/LIA/max5.sl:
cvc5 interrupted by SIGTERM.

==========
[157/162] examples/LIA/inv_gen_trex2.sl:
(
(define-fun inv ((x Int)) Bool (let ((_let_1 (* 0 x))) (let ((_let_2 (+ _let_1 _let_1))) (or (<= _let_2 (- 3)) (<= _let_2 0)))))
)

==========
[158/162] examples/LIA/qm_neg_2.sl:
cvc5 interrupted by SIGTERM.

==========
[159/162] examples/LIA/inv_gen_winf2.sl:
(
(define-fun inv ((x Int)) Bool (let ((_let_1 (* 0 x))) (or (<= (+ _let_1 _let_1) (- 3)) (= (+ _let_1 (* 1 x)) 0))))
)

==========
[160/162] examples/LIA/t1.sl:
(
(define-fun f_119-13-119-51 ((stopTime Int) (this.stopTime Int) (org.apache.commons.lang.time.StopWatch.STATE_RUNNING Int) (this.splitState Int) (org.apache.commons.lang.time.StopWatch.STATE_SUSPENDED Int) (org.apache.commons.lang.time.StopWatch.STATE_UNSTARTED Int) (this.startTime Int) (org.apache.commons.lang.time.StopWatch.STATE_SPLIT Int) (org.apache.commons.lang.time.StopWatch.STATE_UNSPLIT Int) (org.apache.commons.lang.time.StopWatch.STATE_STOPPED Int) (MC_741360 Int) (this.runningState Int)) Bool (= this.stopTime org.apache.commons.lang.time.StopWatch.STATE_RUNNING))
)

Completed 0/162
